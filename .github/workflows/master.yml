name: Master

on: 
  push:
    branches:
      - master

env:
  STAGE: staging
  VAULT_PASS: ${{ secrets.VAULT_PASS }}

jobs:
  App:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install and set up env
        run: |
          pip install ansible boto
          .github/actions/setenv/entrypoint.sh
      - name: Get API elb dns
        working-directory: automation/ansible
        run: |
          ansible-playbook get_elb_dns.yml -i inventory/hosts -e stage=${{ env.STAGE }}
          echo "::set-env name=REACT_APP_API_URL::$(cat elb_api_dns.txt)"
      - uses: actions/setup-node@v2-beta
      - name: Publish app
        working-directory: app
        run: |
          yarn install
          echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
          yarn expo login --non-interactive -u ${{ env.EXPO_USERNAME }} -p ${{ env.EXPO_PASSWORD }}
          yarn expo publish --non-interactive
  
  Back:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install and set up env
        run: |
          pip install ansible boto
          .github/actions/setenv/entrypoint.sh
      - name: Get API elb dns
        working-directory: automation/ansible
        run: |
          ansible-playbook get_elb_dns.yml -i inventory/hosts
          echo "::set-env name=REACT_APP_API_URL::$(cat elb_api_dns.txt)"
      - name: Build and push API
        uses: docker/build-push-action@v1
        with:
          path: ./api
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          repository: ${{ env.DOCKER_USERNAME }}/madu_api
          tag_with_ref: true
          tag_with_sha: true
      - name: Build and push Back-office
        uses: docker/build-push-action@v1
        with:
          path: ./back-office
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          repository: ${{ env.DOCKER_USERNAME }}/madu_back-office
          build_args: REACT_APP_API_URL=${{ env.REACT_APP_API_URL }}
          tag_with_ref: true
          tag_with_sha: true
      - name: Deploy
        working-directory: automation/ansible
        run: |
          echo -e $SSH_PRIVATE_KEY > id_rsa
          chmod 600 id_rsa
          ansible-galaxy install -r requirements.yml
          chmod +x inventory/ec2.py
          ansible-playbook -i inventory/ec2.py -l tag_stage_${{ env.STAGE }} playbook.yml --tags deploy -u ubuntu --key id_rsa